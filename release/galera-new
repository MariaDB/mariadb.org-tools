#!/bin/bash - 
#
# This script exists so that I don't need to remember or look up where things
# are when it is time to copy files over from the build servers for a release.
# It also helps me to not forget any steps.
#
# The purpose of this script is to add files from buildbot from a new MariaDB
# Galera Cluster release to the current MariaDB release.

#------------------------------------------------------------------------------
# Options (set these before running the script)
#------------------------------------------------------------------------------

umask 002

#killall gpg-agent

create_debian="${1}"  # Create Debian repository?
create_ubuntu="${2}"  # Create Ubuntu repository?
   create_yum="${3}"  # Create Yum repositories?
       is_ent="${4}"  # Is this an Enterprise release?
         tree="${5}"  # Tree
          rev="${6}"  # Revision
          num="${7}"  # Version number
  tarbuildnum="${8}"  # Buildbot tarbuildnum

case ${tree} in 
  '5.5'|'5.5-galera')
    debian_dists=""
    ubuntu_dists=""
    yum_dists="
      centos6-amd64
      centos6-x86

      centos73-amd64
      centos73-ppc64
      centos73-ppc64le

      centos74-aarch64
      
      sles114-amd64
      sles114-x86
    "
    ;;
  '10.0'|'10.0-galera')
    debian_dists="jessie"
    ubuntu_dists="xenial"
    yum_dists="
      centos6-amd64
      centos6-x86
      
      centos73-amd64
      centos73-ppc64
      centos73-ppc64le
      
      centos74-aarch64
      
      opensuse42-amd64
      
      sles114-amd64
      sles114-x86
      
      sles12-amd64
      sles12-ppc64le
    "
    ;;
  *) debian_dists="jessie sid buster"
     ubuntu_dists="xenial bionic disco eoan"
     yum_dists="
      centos6-amd64
      centos6-x86
      
      centos73-amd64
      centos73-ppc64
      centos73-ppc64le
      
      centos74-aarch64
      
      opensuse42-amd64
      
      sles114-amd64
      sles114-x86
      
      sles12-amd64
      sles12-ppc64le
    "
    ;;
esac

#------------------------------------------------------------------------------
# Options below this point you probably don't need to change
#------------------------------------------------------------------------------

release="mariadb-${num}"                  # release to add galera packages to

# set location of prep.conf and prep.log to XDG-compatible directories and then
# create them if they don't exist
dir_conf=${XDG_CONFIG_HOME:-~/.config}
dir_log=${XDG_DATA_HOME:-~/.local/share}


#-------------------------------------------------------------------------------
#  Functions
#-------------------------------------------------------------------------------

loadDefaults() {
  # Load the paths (if they exist)
  if [ -f ${dir_conf}/prep.conf ]; then
      . ${dir_conf}/prep.conf
  else
    echo
    echo "The file ${dir_conf}/prep.conf does not exist in your home."
    echo "The prep script creates a default template of this file when run."
    echo "Exiting..."
    exit 1
  fi
}

function runCommand() {
  echo "+ ${@}"
  #sleep 1
  if ${@} ; then
    return 0
  else
    return 1
  fi
}

function line() {
  echo "-------------------------------------------------------------------------------"
}

#------------------------------------------------------------------------------
# Main Script
#------------------------------------------------------------------------------

eval $(gpg-agent --daemon)

loadDefaults                                    # Load Default paths and vars

# Set various options that change depending on whether this is an enterprise release or not
if [ "${is_ent}" = "yes" ];then
  suffix="signed-ent"
  #gpg_key="0xd324876ebe6a595f"                 # old enterprise key
  gpg_key="0xce1a3dd5e3c94f49"                  # new enterprise key
  dir_release="${dir_release_ent}" # Default location for mdbe releases
  dir_name="${num}"
  ubuntu_dists=""
else
  suffix="signed"
  gpg_key="0xcbcb082a1bb943db"
  dir_name="${release}"
fi

# At this point, all variables should be set. Print a usage message if the
# ${tarbuildnum} variable is not set (the last of the command-line variables)

if [ "$tarbuildnum" = "" ] ; then
    echo 1>&2 "Usage: $0 <debian?> <ubuntu?> <yum?> <is_ent?> <tree> <rev> <num> <tarbuildnum>"
    echo 1>&2 "example: $0 yes yes yes no 10.0 1234 10.0.17 9876"
    exit 1
fi

# After this point, we treat unset variables as an error
set -u
  # -u  Treat unset variables as an error when performing parameter expansion.
  #     An error message will be written to the standard error, and a
  #     non-interactive shell will exit.

#-------------------------------------------------------------------------------
#  Ubuntu
#-------------------------------------------------------------------------------
if [ "${create_ubuntu}" != "no" ]; then
  echo;echo;
  line
  echo "+ Adding files to Ubuntu repo..."
  line
  for dir_path in ${dir_corp} ${dir_release} ; do
    cd ${dir_path}/${dir_name}/repo/ubuntu
    for dist in ${ubuntu_dists} ; do
      for gv in ${ver_galera}; do
        for file in $(find "${dir_archive}/${tree}/build-${tarbuildnum}/kvm-deb-${dist}-amd64/" -name "*galera-server*${dist}*.deb"); do
          runCommand reprepro -S optional -P misc --basedir=. includedeb $dist ${file} ;
        done;
        for file in $(find "${dir_archive}/${tree}/build-${tarbuildnum}/kvm-deb-${dist}-amd64/" -name "*galera-test*${dist}*.deb"); do
          runCommand reprepro -S optional -P misc --basedir=. includedeb $dist ${file} ;
        done;
        if [ "${dir_path}" = "${dir_release}" ];then
          if [ "${dist}" = "xenial" ]; then
            for file in $(find "${dir_archive_p8}/${tree}/${rev}/p8-${dist}-deb/" -name "*galera-server*${dist}*ppc64el.deb"); do
              runCommand reprepro -S optional -P misc --basedir=. includedeb $dist ${file} ;
            done;
            for file in $(find "${dir_archive_p8}/${tree}/${rev}/p8-${dist}-deb/" -name "*galera-test*${dist}*ppc64el.deb"); do
              runCommand reprepro -S optional -P misc --basedir=. includedeb $dist ${file} ;
            done;
            runCommand reprepro --basedir=. include ${dist} ${dir_galera}/galera-${gv}-${suffix}/deb/galera-3_${gv}-${dist}*_ppc64el.changes
          fi
        fi
        #else
          for file in $(find "${dir_archive}/${tree}/build-${tarbuildnum}/kvm-deb-${dist}-x86/" -name "*galera-server*${dist}*i386.deb"); do
            runCommand reprepro -S optional -P misc --basedir=. includedeb $dist ${file} ;
          done;
          for file in $(find "${dir_archive}/${tree}/build-${tarbuildnum}/kvm-deb-${dist}-x86/" -name "*galera-test*${dist}*i386.deb"); do
            runCommand reprepro -S optional -P misc --basedir=. includedeb $dist ${file} ;
          done;
          runCommand reprepro --basedir=. include ${dist} ${dir_galera}/galera-${gv}-${suffix}/deb/galera-3_${gv}-${dist}*_i386.changes
        #fi
        #for file in $(find "${dir_galera}/galera-${gv}-${suffix}/" -name "*${dist}*.deb"); do reprepro -S optional -P misc --basedir=. includedeb $dist ${file} ; done
        runCommand reprepro --basedir=. include ${dist} ${dir_galera}/galera-${gv}-${suffix}/deb/galera-3_${gv}-${dist}*_amd64.changes
        #if [ "${dist}" = "xenial" ]; then
        #  runCommand reprepro --basedir=. include ${dist} ${dir_galera}/galera-${gv}-${suffix}/deb/galera-3_${gv}-${dist}*_ppc64el.changes
        #fi
      done
    done
  done
else
  line
  echo "+ Skipping adding files to Ubuntu repo, as requested..."
  line
fi

#-------------------------------------------------------------------------------
#  Debian
#-------------------------------------------------------------------------------
if [ "${create_debian}" != "no" ]; then
    echo;echo;
  line
  echo "+ Adding files to Debian repo..."
  line
  for dir_path in ${dir_corp} ${dir_release} ; do
    cd ${dir_path}/${dir_name}/repo/debian
    #for i in "squeeze debian6" "wheezy wheezy"; do
    #for i in "squeeze debian6" "wheezy wheezy" "sid sid"; do
    for dist in ${debian_dists}; do
      for gv in ${ver_galera}; do
        if [ "${dist}" = "squeeze" ];then
          builder="debian6"
        else
          builder="${dist}"
        fi
        for file in $(find "${dir_archive}/${tree}/build-${tarbuildnum}/kvm-deb-${builder}-amd64/" -name "*galera-server*${dist}*.deb"); do
          runCommand reprepro -S optional -P misc --basedir=. includedeb ${dist} ${file} ;
        done;
        for file in $(find "${dir_archive}/${tree}/build-${tarbuildnum}/kvm-deb-${builder}-amd64/" -name "*galera-test*${dist}*.deb"); do
          runCommand reprepro -S optional -P misc --basedir=. includedeb ${dist} ${file} ;
        done;
        if [ "${is_ent}" != "yes" ];then
          for file in $(find "${dir_archive}/${tree}/build-${tarbuildnum}/kvm-deb-${builder}-x86/" -name "*galera-server*${dist}*i386.deb"); do
            runCommand reprepro -S optional -P misc --basedir=. includedeb ${dist} ${file} ;
          done;
          for file in $(find "${dir_archive}/${tree}/build-${tarbuildnum}/kvm-deb-${builder}-x86/" -name "*galera-test*${dist}*i386.deb"); do
            runCommand reprepro -S optional -P misc --basedir=. includedeb ${dist} ${file} ;
          done;
          runCommand reprepro --basedir=. include ${dist} ${dir_galera}/galera-${gv}-${suffix}/deb/galera-3_${gv}-${dist}*_i386.changes
        fi
        #for file in $(find "${dir_galera}/galera-${gv}-${suffix}/" -name "*${dist}*.deb"); do reprepro -S optional -P misc --basedir=. includedeb ${dist} ${file} ; done
        runCommand reprepro --basedir=. include ${dist} ${dir_galera}/galera-${gv}-${suffix}/deb/galera-3_${gv}-${dist}*_amd64.changes
      done
    done
  done
else
  line
  echo "+ Skipping adding to Debian repo, as requested..."
  line
fi

#-------------------------------------------------------------------------------
#  RHEL, CentOS, Fedora, SUSE, openSUSE
#-------------------------------------------------------------------------------
if [ "${create_yum}" != "no" ]; then
  echo;echo;
  line
  echo "+ Adding files to rpm repos..."
  line
  cd ${dir_release}/${dir_name}/yum
  for REPONAME in ${yum_dists}; do
    echo
    line
    echo "+ copying ${REPONAME} files"
    line

    # Copy in the new MariaDB Galera files
    case ${REPONAME} in
      'sles12-ppc64le')
        runCommand rsync -avP ${dir_archive_p8}/${tree}/${rev}/p8-suse12-rpm/rpms/*server.rpm ${REPONAME}/rpms/
        runCommand rsync -avP ${dir_archive_p8}/${tree}/${rev}/p8-suse12-rpm/rpms/*test.rpm   ${REPONAME}/rpms/
        ;;
      'sles12-amd64')
        runCommand rsync -avP ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-zyp-sles123-amd64/rpms/*server.rpm ${REPONAME}/rpms/
        runCommand rsync -avP ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-zyp-sles123-amd64/rpms/*test.rpm ${REPONAME}/rpms/
        ;;
      *)
        runCommand rsync -avP ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-*-${REPONAME}/rpms/*server.rpm ${REPONAME}/rpms/
        runCommand rsync -avP ${dir_archive}/${tree}/build-${tarbuildnum}/kvm-*-${REPONAME}/rpms/*test.rpm ${REPONAME}/rpms/
        ;;
    esac
    for gv in ${ver_galera}; do
      runCommand rsync -avP ${dir_galera}/galera-${gv}-${suffix}/rpm/${REPONAME}/galera*.rpm ${REPONAME}/rpms/
    done
    echo;echo;
  done

  # all rpm packages are now in place, sign them
  cd ${dir_release}/${dir_name}/yum
  rpmsign --addsign --key-id=${gpg_key} $(find . -name '*.rpm')
  
  # updating the repositories doesn't work over nfs so we need to move the
  # yum dir to $HOME and then move it back when we're done
  runCommand rsync -avP --delete-after ${dir_release}/${dir_name}/yum ~/
  cd ~/yum
  
  # update the sums, refresh the repo metadata, & sign the repomd.xml files
  for DIR in ${yum_dists}; do
    echo
    line
    echo "+ Processing ${DIR}"
    line
    runCommand cd ~/yum/${DIR}
    pwd
    # Generate checksums for the rpms in the dir
    for sum in md5 sha1 sha256 sha512; do
      if [ -e ${sum}sums.txt ]; then
        rm -v ${sum}sums.txt
      fi
      ${sum}sum $(find . -name '*.rpm') >> ${sum}sums.txt
      runCommand ${sum}sum -c ${sum}sums.txt
    done

    cd ~/yum
    # Create the repository and sign the repomd.xml file
    case ${DIR} in
      'sles114-amd64'|'sles114-x86')
        # sles114 doesn't support newer sha256 checksums
        runCommand createrepo_c -s sha --database --pretty ${DIR}
        ;;
      *)
        runCommand createrepo_c --database --pretty ${DIR}
        ;;
    esac
    #runCommand createrepo_c --update --database --pretty ${DIR}
    if [ -e ${DIR}/repodata/repomd.xml.asc ]; then
      runCommand rm -v ${DIR}/repodata/repomd.xml.asc
    fi
    runCommand gpg2 --detach-sign --armor -u ${gpg_key} ${DIR}/repodata/repomd.xml
  done

  echo "+ moving the yum dir back to where it belongs"
  echo "+ rsync -a --info=progress2 --delete ~/yum ${dir_release}/${dir_name}/"
          rsync -a --info=progress2 --delete ~/yum ${dir_release}/${dir_name}/
  runCommand rm -rf ~/yum

  cd ${dir_release}/${dir_name}/

  echo "+ Syncing updates to the yum dir to the corp release dir"
  echo "+ rsync -a --info=progress2 --delete --exclude=ppc64 --exclude=ppc64le ${dir_release}/${dir_name}/yum ${dir_corp}/${dir_name}/"
          rsync -a --info=progress2 --delete --exclude=ppc64 --exclude=ppc64le ${dir_release}/${dir_name}/yum ${dir_corp}/${dir_name}/
  echo
  # remove ppc versions
  pushd ${dir_corp}/${dir_name}/yum/
    rm -v *ppc64*
    rm -vrf */*/ppc64*
  popd

else
  line
  echo "+ Skipping adding files to Yum repo, as requested..."
  line
fi

# vim: filetype=sh
