
#!/bin/bash

if [ "$1" = "" ]
then
  echo ''
  echo 'usage:'
  echo "  $0 <flags> [<option1> [<option2> ... ]]"
  echo ''
  echo 'where:'
  echo '  flags:'
  echo '  1 - build with 128 indices'
  echo '  a - build with ASAN'
  echo '  d - build type Debug'
  echo '  e - build embedded'
  echo '  m - build with MSAN'
  echo '  n - build with Ninja'
  echo '  p - buldled Pcre (otherwise sytem)'
  echo '  s - bundled Ssl (otherwise sytem)'
  echo '  u - build with UBSAN'
  echo '  v - build for valgrind'
  echo '  3 - add s3 plugin'
  echo '  C - add Columnstore plugin'
  echo '  M - add Mroonga plugin'
  echo '  O - add cOnnect plugin'
  echo '  R - add Rocksdb plugin'
  echo '  S - add Spider plugin'
  echo '  T - add Tokudb plugin'
  echo ''
  exit 1
fi

BRANCH=`git rev-parse --show-toplevel`

if [ "${BRANCH}" = '' ]
then
  echo ''
  echo 'This command mast be run from a git repository'
  echo ''
  exit 1
fi

# defaults

MAX_INDEXES='64'
WITH_ASAN='NO'
BUILD_TYPE=''
WITH_EMBEDDED_SERVER='NO'
WITH_MSAN='NO'
GENERATE=''
WITH_PCRE='system'
WITH_SSL='system'
WITH_UBSAN='NO'
WITH_VALGRIND='NO'
PLUGIN_S3='NO'
PLUGIN_COLUMNSTORE='NO'
PLUGIN_MROONGA='NO'
PLUGIN_CONNECT='NO'
PLUGIN_ROCKSDB='NO'
PLUGIN_SPIDER='NO'
PLUGIN_TOKUDB='NO'

FLAGS="$1"

for (( i=0; i<${#FLAGS}; i++ ))
do
  FLAG="${FLAGS:$i:1}"
  case $FLAG in
    1)
      MAX_INDEXES='128'
    ;;
    a)
      WITH_ASAN='YES'
    ;;
    d)
      BUILD_TYPE='Debug'
    ;;
    e)
      WITH_EMBEDDED_SERVER='YES'
    ;;
    m)
      WITH_MSAN='YES'
    ;;
    n)
      GENERATE='Ninja'
    ;;
    p)
      WITH_PCRE='bundled'
    ;;
    s)
      WITH_SSL='bundled'
    ;;
    u)
      WITH_UBSAN='YES'
    ;;
    v)
      WITH_VALGRIND='YES'
    ;;
    3)
      PLUGIN_S3='YES'
    ;;
    C)
      PLUGIN_COLUMNSTORE='YES'
    ;;
    M)
      PLUGIN_MROONGA='YES'
    ;;
    O)
      PLUGIN_CONNECT='YES'
    ;;
    R)
      PLUGIN_ROCKSDB='YES'
    ;;
    S)
      PLUGIN_SPIDER='YES'
    ;;
    T)
      PLUGIN_TOKUDB='YES'
    ;;
    *)
      echo "incorrect flag '${FLAG}'"
      exit 1
      ;;
  esac
done

MYCMD='cmake ./'
if [ "${GENERATE}" != '' ]
then
  MYCMD="${MYCMD} -G${GENERATE}"
fi
if [ "${BUILD_TYPE}" != '' ]
then
  MYCMD="${MYCMD} -DCMAKE_BUILD_TYPE=${BUILD_TYPE}"
fi

shift
MYCMD="${MYCMD} -DMAX_INDEXES=${MAX_INDEXES} -DWITH_ASAN=${WITH_ASAN} -DWITH_EMBEDDED_SERVER=${WITH_EMBEDDED_SERVER} -DWITH_MSAN=${WITH_MSAN} -DWITH_PCRE=${WITH_PCRE} -DWITH_SSL=${WITH_SSL} -DWITH_UBSAN=${WITH_UBSAN} -DWITH_VALGRIND=${WITH_VALGRIND} -DPLUGIN_S4=${PLUGIN_S3} -DPLUGIN_COLUMNSTORE=${PLUGIN_COLUMNSTORE} -DPLUGIN_MROONGA=${PLUGIN_MROONGA} -DPLUGIN_CONNECT=${PLUGIN_CONNECT} -DPLUGIN_ROCKSDB=${PLUGIN_ROCKSDB} -DPLUGIN_SPIDER=${PLUGIN_SPIDER} -DPLUGIN_TOKUDB=${PLUGIN_TOKUDB} $@"

echo "${MYCMD}"
(cd ${BRANCH} && \
  $MYCMD && \
  cmake --build ./
)
