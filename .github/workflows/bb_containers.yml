---
name: BB container build

on:
  push:
    paths:
      - .github/workflows/bb_containers.yml
      - "buildbot.mariadb.org/ci_build_images/**"
  pull_request:
    paths:
      - .github/workflows/bb_containers.yml
      - "buildbot.mariadb.org/ci_build_images/**"

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
        # this is needed because we restart the docker daemon for experimental
        # support
        options: "--restart always"
    name: ${{ matrix.image }} (${{ matrix.platforms }})
    strategy:
      fail-fast: false
      matrix:
        include:
          # TODO: missing ppc64le/debian:9 image
          # TODO: problem with pip
          # - dockerfile: rhel7.Dockerfile
          #   image: rhel7-aarch64
          #   platforms: linux/arm64/v8
          - dockerfile: debian.Dockerfile
            image: debian:9
            branch: 10.7
            platforms: linux/amd64, linux/arm64/v8
          - dockerfile: debian.Dockerfile
            image: debian:9
            branch: 10.7
            platforms: linux/386
          - dockerfile: debian.Dockerfile
            image: debian:10
            branch: 10.7
            platforms: linux/amd64, linux/arm64/v8, linux/ppc64le
          - dockerfile: debian.Dockerfile
            image: debian:11
            branch: 10.7
            platforms: linux/amd64, linux/arm64/v8, linux/ppc64le
          - dockerfile: debian.Dockerfile
            image: debian:sid
            branch: 10.7
            platforms: linux/amd64, linux/arm64/v8, linux/ppc64le
          - dockerfile: debian.Dockerfile
            image: debian:sid
            branch: 10.7
            platforms: linux/386
          - dockerfile: debian.Dockerfile
            image: ubuntu:18.04
            branch: 10.7
            platforms: linux/amd64, linux/arm64/v8, linux/ppc64le
          - dockerfile: debian.Dockerfile
            image: ubuntu:18.04
            branch: 10.7
            platforms: linux/386
          - dockerfile: debian.Dockerfile
            image: ubuntu:20.04
            branch: 10.7
            platforms: linux/amd64, linux/arm64/v8, linux/ppc64le, linux/s390x
          - dockerfile: debian.Dockerfile
            image: ubuntu:21.10
            branch: 10.7
            platforms: linux/amd64, linux/arm64/v8, linux/ppc64le, linux/s390x
          - dockerfile: debian.Dockerfile
            image: ubuntu:22.04
            branch: 10.7
            platforms: linux/amd64, linux/arm64/v8, linux/ppc64le, linux/s390x
          - dockerfile: fedora.Dockerfile
            image: fedora:34
            platforms: linux/amd64, linux/arm64/v8
          - dockerfile: fedora.Dockerfile
            image: fedora:35
            platforms: linux/amd64, linux/arm64/v8
          - dockerfile: centos7.Dockerfile
            image: centos:7
            platforms: linux/amd64, linux/arm64/v8, linux/ppc64le
          - dockerfile: centos.Dockerfile
            image: quay.io/centos/centos:stream8
            platforms: linux/amd64, linux/arm64/v8
          - dockerfile: rhel7.Dockerfile
            image: rhel7
            platforms: linux/amd64, linux/ppc64le
          - dockerfile: rhel8.Dockerfile
            image: ubi8
            platforms: linux/amd64, linux/arm64/v8, linux/ppc64le
    env:
      BUILD_RHEL: false
      DEPLOY_IMAGES: false
      WORKDIR: buildbot.mariadb.org/ci_build_images

    steps:
      - uses: actions/checkout@v2
      - name: Check Dockerfile with hadolint
        run: |
          cd ${{ env.WORKDIR }}
          docker run -i -v $(pwd):/mnt -w /mnt hadolint/hadolint:latest hadolint /mnt/${{ matrix.dockerfile }}
      - name: Set up env vars
        run: |
          set -vx
          [[ -n "${{ matrix.image }}" ]] || {
            echo "Missing base image (FROM)"
            exit 1
          }
          TAG_TMP=${{ matrix.image }}
          if [[ $TAG_TMP = "quay.io/centos/centos:stream8" ]]; then
            echo "TAG=centos-stream8" >>$GITHUB_ENV
          elif [[ $TAG_TMP = "ubi8" ]]; then
            echo "TAG=rhel8" >>$GITHUB_ENV
          elif [[ "${{ matrix.platforms }}" = "linux/386" ]]; then
            echo "TAG=${TAG_TMP/:/}-386" >>$GITHUB_ENV
          else
            echo "TAG=${TAG_TMP/:/}" >>$GITHUB_ENV
          fi
      - name: Check for rhel subscription credentials
        if: (contains(matrix.dockerfile, 'rhel'))
        run: |
          missing=()
          [[ -n "${{ secrets.RHEL_ORGID }}" ]] || missing+=(RHEL_ORGID)
          [[ -n "${{ secrets.RHEL_KEYNAME }}" ]] || missing+=(RHEL_KEYNAME)
          for i in "${missing[@]}"; do
            echo "Missing github secret: $i"
          done
          (( ${#missing[@]} == 0 )) || exit 1
          echo "BUILD_RHEL=true" >> $GITHUB_ENV
      - name: Enable experimental support
        run: |
          config='/etc/docker/daemon.json'
          if [[ -e "$config" ]]; then
            sudo sed -i -e 's/{/{ "experimental": true, /' "$config"
          else
            echo '{ "experimental": true }' | sudo tee "$config"
          fi
          sudo systemctl restart docker
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx (local builds)
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
          # config-inline: |
          #   [worker.oci]
          #     max-parallelism = 3
      - name: Generate Dockerfile
        run: |
          cd ${{ env.WORKDIR }}
          pwd
          cat ${{ matrix.dockerfile }} common.Dockerfile >/home/runner/work/Dockerfile
      - name: Build image
        if: (!contains(matrix.dockerfile, 'rhel'))
        uses: docker/build-push-action@v2
        with:
          build-args: |
            base_image=${{ matrix.image }}
            mariadb_branch=${{ matrix.branch }}
          context: /home/runner/work
          file: /home/runner/work/Dockerfile
          platforms: ${{ matrix.platforms }}
          push: true
          tags: localhost:5000/test/bb-worker:${{ env.TAG }}
      - name: Build image (rhel)
        if: ${{ env.BUILD_RHEL == 'true' }}
        uses: docker/build-push-action@v2
        with:
          build-args: |
            base_image=${{ matrix.image }}
            mariadb_branch=${{ matrix.branch }}
          secrets: |
            "rhel_orgid=${{ secrets.RHEL_ORGID }}"
            "rhel_keyname=${{ secrets.RHEL_KEYNAME }}"
          context: /home/runner/work
          file: /home/runner/work/Dockerfile
          platforms: ${{ matrix.platforms }}
          push: true
          tags: localhost:5000/test/bb-worker:${{ env.TAG }}
      - name: Check multi-arch container
        run: |
          for p in ${{ matrix.platforms }}; do
            platform="${p/,/}"
            image="localhost:5000/test/bb-worker:${{ env.TAG }}"
            msg="Testing docker image $image on platform $platform"
            line="${msg//?/=}"
            printf "\n${line}\n${msg}\n${line}\n"
            docker pull -q --platform "$platform" "$image"
            docker run -i "$image" /home/buildbot/.local/bin/buildbot-worker --version
            docker run -i "$image" dumb-init /home/buildbot/.local/bin/twistd --pidfile= -y /home/buildbot/buildbot.tac
          done
      - name: Check for registry credentials
        if: >
          github.ref == 'refs/heads/master' &&
          github.repository == 'MariaDB/mariadb.org-tools'
        run: |
          missing=()
          [[ -n "${{ secrets.QUAY_USER }}" ]] || missing+=(QUAY_USER)
          [[ -n "${{ secrets.QUAY_TOKEN }}" ]] || missing+=(QUAY_TOKEN)
          for i in "${missing[@]}"; do
            echo "Missing github secret: $i"
          done
          if (( ${#missing[@]} == 0 )); then
            echo "DEPLOY_IMAGES=true" >> $GITHUB_ENV
          else
            echo "Not pushing images to registry"
          fi
      - name: Login to registry
        if: ${{ env.DEPLOY_IMAGES == 'true' }}
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USER }}
          password: ${{ secrets.QUAY_TOKEN }}
      - name: Push images to registry
        if: ${{ env.DEPLOY_IMAGES == 'true' }}
        run: |
          msg="Push docker image to registry (${{ env.TAG }})"
          line="${msg//?/=}"
          printf "\n${line}\n${msg}\n${line}\n"
          skopeo copy --all --src-tls-verify=0 \
          docker://localhost:5000/test/bb-worker:${{ env.TAG }} \
          docker://quay.io/mariadb-foundation/bb-worker:${{ env.TAG }}
